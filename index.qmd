# HAX815X: Software development for data science

(Almost) everything you need to know as an applied mathematician/statistician concerning coding and system administration.

## Teachers

- Benjamin Charlier: [benjamin.charlier@umontpellier.fr](mailto:benjamin.charlier@umontpellier.fr)


## Prerequisite

Some rudiments in coding are expected (if, for, while, functions) but not mandatory. Students are expected to know basic notions of statistics.

## Course description

This course focuses on discovering good coding practices (the language used is Python, but some elements of bash and git will also be useful) for professional coding.
A special focus on data processing and visualization will be at the heart of the course.
We will mostly focus on basic programming concepts, as well as on discovering the Python scientific libraries, including ```numpy, scipy, pandas, matplotlib, seaborn```.
Beyond `pandas` ninja skills, we will also introduce modern practices for coders: (unitary) tests, version control, documentation generation, etc.

|Date      |Teacher |Details |
|----------|------|---------------------|
|25/09/2023|BC    |[Command-line tools](Courses/Bash/tp.qmd), [Version control with Git](Courses/Git/tp.qmd)|
|09/10/2023|BC    |[Version control with Git](Courses/Git/tp.qmd), [IDE](Courses/IDE/tp.qmd) / [Python virtual environment](Courses/Venv/tp.qmd)|
|16/10/2023|BC    |[Creating a Python Module](Courses/Python-modules/tp.qmd), [Classes & Exceptions](Courses/ClassesExceptions/tp.qmd)|
|23/10/2023|BC    |[SciPy](Courses/ScipyNumpy/tp.qmd), [Pandas](Courses/Pandas/tp.qmd)|
|06/11/2023|BC    |[Markdown to html (Quarto, Sphinx,...)](Courses/Docs/tp.qmd), [Unit Tests](Courses/Test/tp.qmd), [Continuous Integration (CI)](Courses/CI/tp.qmd)|
|14/11/2023|BC    |Project snapshots |
|12/12/2023|BC    |The end: Project presentations |
:  {.striped}


## Grading

For this course, the grading consists of one group project.

## Books and other resources

The resources for the course are available on the present `GitHub` repository. Additional elementary elements (**in French**) on Python are available in the course [HLMA310](http://josephsalmon.eu/HLMA310.html) and the associated lecture notes [IntroPython.pdf](http://josephsalmon.eu/enseignement/Montpellier/HLMA310/IntroPython.pdf).

### Moodle webpage

The [Moodle web page](https://moodle.umontpellier.fr/course/view.php?id=24820) is available to registered students only.

### Additional resources

*  (General): [The Missing Semester of Your CS Education](https://missing.csail.mit.edu/)
*  (Algorithmic basis): [Algorithms](https://jeffe.cs.illinois.edu/teaching/algorithms/#book), by Jeff Erickson
*  (Data Science): [Python Data Science Handbook, With Application to Understanding Data](https://jakevdp.github.io/PythonDataScienceHandbook/) by J. Van DerPlas, 2016;<br>
 **videos**: [Reproducible Data Analysis in Jupyter](http://jakevdp.github.io/blog/2017/03/03/reproducible-data-analysis-in-jupyter/)
*  (General) Skiena, *The algorithm design manual*, 1998
*  (General) Courant et *al.*, *Informatique pour tous en classes préparatoires aux grandes écoles: Manuel d'algorithmique et programmation structurée avec Python*, 2013, (french)
*  (General/data science) Guttag, *Introduction to Computation and Programming*,
2016
*  (Code and style) Boswell et Foucher, *The Art of Readable Code*, 2011
*  (Scientific computing tools for Python) [Scipy lectures notes](http://www.scipy-lectures.org/)
*  (Datasets) [Open Climate Data](http://openclimatedata.net/)
